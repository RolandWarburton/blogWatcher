hello. please dont read this cos its pretty sketchy


a content watcher is an express mongodb database of pages in the website

{
	page name:
	page source: "url or file location"
	location on filesystem: 
	template:
	history: {
		[
			{
				date: 
				commit message: 
				commit hash: 
			},
			{
				date: 
				commit message: 
				commit hash: 
			},
		]
	}
}

a script can run and fetch all the content from urls and then reference them in the database.

also all the files are stored locally and have their history tracked.

The features that this will make easier to implement in the future are.
1. download page info based on the "pageSource" and dump it all into a file and track its location with "fsPath"
and then after that i can add extra features n stuff
2. like the "last modified" thing
3. or implement an express server that listens for github webhooks for commits i make to my RolandWarburton/knowledge repo that updates the db with new content as it comes in (thats a big feature for me)
4. implement a "recently added" pages feature to the home page

